name: Actions Runner Controller testnew
on:
  workflow_dispatch:
jobs:
  Explore-GitHub-Actions:
    runs-on: arc-runner-set
    steps:
      - run: echo "ðŸŽ‰ This job uses runner scale set runners!"
    
      - name: Install git
        run: sudo apt update && sudo apt install -y git
      
      - name: Check out repository
        run: git clone https://github.com/enochnet/covid_case_privacy_review
      
      - name: Install libcurl4-openssl-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev
          sudo apt-get install -y libxml2-dev

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.2  # Specify your desired R version

      - name: Install renv
        run: Rscript -e "install.packages('renv')"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          Rscript -e "install.packages('textshaping')"
          Rscript -e "install.packages('curl')"
          Rscript -e "install.packages('targets')"
          Rscript -e "install.packages('futile.logger')" 
          Rscript -e "install.packages('conflicted')"
          Rscript -e "install.packages('xml2')"
          
      - name: Install lintr
        run: Rscript -e "install.packages('lintr')"
       
      - name: Run lintr
        run: Rscript -e 'lintr::lint_package()'

      - name: Restore project environment
        run: | 
          Rscript -e "renv::snapshot()"
          Rscript -e "renv::restore()"  
        working-directory: ${{ github.workspace}} 
      
      - name: Run R Script
        run: |
          Rscript matrix.R
        working-directory: covid_case_privacy_review

      - name: Start Docker-in-Docker
        run: docker run --privileged --name dind -d docker:stable-dind

      - name: Run CVE Scanning with Grype
        run: |
          docker exec dind docker run --rm -v ${{github.workspace}}:/src anchore/grype /src -o json > grype-output.json
          if grep -q '"severity":"Critical"' grype-output.json; then
            echo "Critical vulnerabilities found!"
            exit 1
          fi

      - name: Generate SBOM with Syft
        run: docker exec dind docker run --rm -v ${{github.workspace}}:/src anchore/syft /src -o json > sbom.json
      
      - name: Upload SBOM
        uses: actions/upload-artifact@v2
        with:
          name: sbom
          path: sbom.json
---